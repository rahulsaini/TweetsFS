<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
		  http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         version="2.5">
    <display-name>tweetsfs</display-name>
    <distributable/>

    <servlet>
        <servlet-name>AppLogin</servlet-name>
        <servlet-class>com.cswi.tweetsfs.auth.AppLogin</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>AppLogin</servlet-name>
        <url-pattern>/appLogin</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.htm</welcome-file>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
    <resource-ref>
        <description>TweetsFS DataSource</description>
        <res-ref-name>jdbc/tweetsfsDS</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>

    <!-- ===============================================================================
    Hook up Spring so that we can inject Spring Beans onto our actions.
    ContextLoadListener is required so that access to the beanFactory can be mitigated through
    the ServletContext.
     =============================================================================== -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- ===============================================================================
     This listener below allows Spring framework, access to the HTTP session information.
     For Spring to access HttpServletRequest object, and through that, the HttpSession object
    =============================================================================== -->
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            /WEB-INF/applicationContext.xml
        </param-value>
    </context-param>

</web-app>
